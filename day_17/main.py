from collections import defaultdict


SHAPES_PATTERN = [
    """####""",
    """.#.
###
.#.""",
    """..#
..#
###""",
    """#
#
#
#""",
    """##
##"""
]

JET_PATTERN = '>>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>'

SHAFT_WIDTH = 7

# the position (x and y offset relative to the previouis rock) is always the same as a function of:
#      - the actual rock
#      - the x-position of the previous rock once rested

HEIGHTS = []

def colliding( rock, fallen_rocks):
    for fallen_rock in fallen_rocks[-5:]:
        if rock.collides(fallen_rock):
            return True
        
    return False

class Rock:
    def __init__(self, shape_pattern: list):
        shape_coordinates = list()
        for y, row in enumerate(reversed(shape_pattern.split('\n'))):
            for x, cell in enumerate(row):
                if cell != '.':
                    shape_coordinates.append((x, y))        
        self._shape_pattern = shape_coordinates
        self._x_offset = None
        self._y_offset = None
        self._x_min = min(list(zip(*self._shape_pattern))[0])
        self._x_max = max(list(zip(*self._shape_pattern))[0])
        self._y_min = min(list(zip(*self._shape_pattern))[1])
        self._y_max = max(list(zip(*self._shape_pattern))[1])
        self._collision_coordinates = None

    def initialise_position(self, fallen_shapes: list):
        self._x_offset = 2
        if fallen_shapes:
            self._y_offset = max([r.top for r in fallen_shapes]) + 4
            self.set_collision_coordinates()
        else: # position above floor
            self._y_offset = 3
            self.set_collision_coordinates()

    def set_collision_coordinates(self):
        self._collision_coordinates = set([(x + self._x_offset, y + self._y_offset) for x, y in self._shape_pattern])

    def drop(self, fallen_rocks: list) -> bool:
        """ Try to drop the rock. Return True is successful else False"""
        if self.bottom == 0:
            return False # sat on the floor
        
        # drop rock and check for collisions
        self._y_offset -= 1
        self.set_collision_coordinates()
        if colliding( self, fallen_rocks):
            self._y_offset += 1
            self.set_collision_coordinates()
            return False
        
        return True

    def apply_jet(self, jet_char: str, fallen_rocks: list):
        if jet_char == '<':
            self.left_jet(fallen_rocks)
        else:
            self.right_jet(fallen_rocks)

    def right_jet(self, fallen_rocks: list):
        if self.right < SHAFT_WIDTH - 1:
            self._x_offset += 1
            self.set_collision_coordinates()
            if colliding( self, fallen_rocks):
                self._x_offset -= 1
                self.set_collision_coordinates()

    def left_jet(self, fallen_rocks: list):
        if self.left > 0:
            self._x_offset -= 1
            self.set_collision_coordinates()
            if colliding( self, fallen_rocks):
                self._x_offset += 1
                self.set_collision_coordinates()

    def collides(self, other_rock):
        if other_rock.right < self.left or other_rock.left > self.right or \
           other_rock.top < self.bottom or other_rock.bottom > self.top:
            return False
        
        # now we need to check each coordinate
        return self.rock_coordinates.intersection(other_rock.rock_coordinates)

    @property
    def rock_coordinates(self):
        return self._collision_coordinates

    @property
    def left(self):
        return self._x_min + self._x_offset

    @property
    def right(self):
        return self._x_max + self._x_offset

    @property
    def top(self):
        return self._y_max + self._y_offset

    @property
    def bottom(self):
        return self._y_min + self._y_offset

    def __str__(self):
        height = self.top - self.bottom + 1
        visualisation =  [['.'] * 7 for _ in range(height)]
        for x, y in self.rock_coordinates:
            visualisation[y - self._y_offset][x] = '*'
        return '\n'.join([''.join(r) for r in reversed(visualisation)])


def solve():

    fallen_rocks = []
    jet = 0
    for rock_no in range(2022):
        rock = Rock(SHAPES_PATTERN[rock_no % len(SHAPES_PATTERN)])
        rock.initialise_position(fallen_rocks)

        # print(rock)
        continue_dropping = True
        while continue_dropping:
            rock.apply_jet(JET_PATTERN[jet], fallen_rocks)
            jet = (jet + 1) % len(JET_PATTERN)
            continue_dropping = rock.drop(fallen_rocks)
            # print(rock)
    
        fallen_rocks.append(rock)

            # print(str(rock))
    print(fallen_rocks[-1].top + 1)

if __name__ == '__main__':
    solve()
